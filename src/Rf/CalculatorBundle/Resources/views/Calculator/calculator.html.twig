{% extends 'RfCalculatorBundle::layout.html.twig' %}

{% block top_left %}

    <div id="amu_container" title="Amulet List">
        <span id='amu_beast_l-label' class='amu_beast amu' title="fluctuating beast vital's Earring" data-name="fluctuating beast vital's Earring" data-icon="amu_beast" data-value='28'></span>
        <span id='amu_beast_r-label' class='amu_beast amu' title="fluctuating beast vital's Earring" data-name="fluctuating beast vital's Earring" data-icon="amu_beast" data-value='28'></span>

        <span id='amu_oc_l-label' class='amu_oc amu' title="Outcasted marauder's Earring" data-name="Outcasted marauder's Earring" data-icon="amu_oc" data-value='28'></span>
        <span id='amu_oc_r-label' class='amu_oc amu' title="Outcasted marauder's Earring" data-name="Outcasted marauder's Earring" data-icon="amu_oc" data-value='28'></span>

        <span id='amu_sk_l-label' class='amu_sk amu' title="Stormknife Claw's Necklace" data-name="Stormknife Claw's Necklace" data-icon="amu_sk" data-value='30'></span>
        <span id='amu_sk_r-label' class='amu_sk amu' title="Stormknife Claw's Necklace" data-name="Stormknife Claw's Necklace" data-icon="amu_sk" data-value='30'></span>

        <span id='amu_starved_l-label' class='amu_starved amu' title="Starved Beast's Earring" data-name="Starved Beast's Earring" data-icon="amu_starved" data-value='28'></span>
        <span id='amu_starved_r-label' class='amu_starved amu' title="Starved Beast's Earring" data-name="Starved Beast's Earring" data-icon="amu_starved" data-value='28'></span>

        <span id='amu_vio_l-label' class='amu_vio amu' title="violent wild's Earring" data-name="violent wild's Earring" data-icon="amu_vio" data-value='28'></span>
        <span id='amu_vio_r-label' class='amu_vio amu' title="violent wild's Earring" data-name="violent wild's Earring" data-icon="amu_vio" data-value='28'></span>

        <span id='amu25_l-label' class='amu25 amu' title='Elemental Hue Headset' data-name='Elemental Hue Headset' data-icon="amu25" data-value='25'></span>
        <span id='amu25_r-label' class='amu25 amu' title='Elemental Hue Headset' data-name='Elemental Hue Headset' data-icon="amu25" data-value='25'></span>

        <span id='amu20_l-label' class='amu20 amu' title='Elemental Pliant Headset' data-name='Elemental Pliant Headset' data-icon="amu20" data-value='20'></span>
        <span id='amu20_r-label' class='amu20 amu' title='Elemental Pliant Headset' data-name='Elemental Pliant Headset' data-icon="amu20" data-value='20'></span>
    </div>

    <div id="ring_container" title="Ring List">
        <span id='ring20_l-label'  class='ring20 ring' title='Elemental Pliant Bracers' data-name='Elemental Pliant Bracers' data-icon="ring20" data-value='20'></span>
        <span id='ring20_r-label'  class='ring20 ring' title='Elemental Pliant Bracers' data-name='Elemental Pliant Bracers' data-icon="ring20" data-value='20'></span>

        <span id='ring25_l-label'  class='ring25 ring' title='Elemental Hue Bracers' data-name='Elemental Hue Bracers' data-icon="ring25" data-value='25'></span>
        <span id='ring25_r-label'  class='ring25 ring' title='Elemental Hue Bracers' data-name='Elemental Hue Bracers' data-icon="ring25" data-value='25'></span>
    </div>

    <div id="amu_input_container" class="container"></div>
    <div id="ring_input_container" class="container"></div>

{% endblock %}

{% block top_center %}
    <div class='rf_main'>

        <div class='result_container'>
            <span>
                <span id="result_image" class="none"></span>
            </span>
            <div>Item Name : <span id='result_name'>-</span></div>
            <div id='result_weapon_container'>Damage : <span id='result_atk_min'>1</span> - <span id='result_atk_max'>1</span></div>
            <div id='result_buff_container'>Buff : <span id='result_buff'>0</span>%</div>
        </div>
        
        <div class='upgrade_container'>
            {% set percentages = {7 : 200, 6 : 135, 5: 80, 4 : 50, 3 : 25, 2: 13, 1 : 5} %}
            {% for i, percent in percentages %}
                <input type='radio' class='upgrade_input hidden_input' id='upgrade{{ i }}' name='upgrade' value='{{ percent }}'/>
                <label for='upgrade{{ i }}'  class='upgrade_label'></label>
            {% endfor %}
        </div>

        <div style="clear:both;"></div>
        <div class="elemental_container">
            <span class="none" id='amu_l'></span>
            <span class="none" id='amu_r'></span>
            <span class="none" id='ring_l'></span>
            <span class="none" id='ring_r'></span>
        </div>

        <div>
            <span class='reset'>reset</span>
        </div>
    </div>
{% endblock %}

{% block top_right %}
    <div id="weapon_container" title="Weapon List">
        <div class="launcher">
            <label for='hora_akeron' id='hora_akeron-label' class='hora_akeron weapon' title='Hora Akeron' data-value='1265-2714' data-name='Hora Akeron' data-icon='hora_akeron'></label>

            <label for='hora_akeron_b' id='hora_akeron_b-label' class='hora_akeron weapon' title='Intense Hora Akeron' data-value='1671-3556' data-name='Intense Hora Akeron' data-icon='hora_akeron'></label>

            <label for='dfl' id='dfl-label' class='dfl weapon' title='Dark Flame Launcher' data-value='1638-3563' data-name='Dark Flame Launcher' data-icon='dfl'></label>

            <label for='dfl_b' id="dfl_b-label" class='dfl weapon' title='Intense Dark Flame Launcher' data-value='2036-4408' data-name='Intense Dark Flame Launcher' data-icon='dfl'></label>

            <label for='div_fl' id="div_fl-label" class='dfl weapon' title='Divine Frame Launcher' data-value='2113-4667' data-name='Divine Frame Launcher' data-icon='dfl'></label>

            <label for='div_fl_b' id="div_fl_b-label" class='dfl weapon' title='Divine Frame Launcher [Rare B]' data-value='2482-5465' data-name='Divine Frame Launcher [Rare B]' data-icon='dfl'></label>

            <label for='saint_fl' id="saint_fl-label" class='dfl weapon' title='Saint Frame Launcher' data-value='2725-6114' data-name='Saint Frame Launcher' data-icon='dfl'></label>

            <label for='saint_fl_b' id="saint_fl_b-label" class='dfl weapon' title='Saint Frame Launcher [Rare B]' data-value='3030-6777' data-name='Saint Frame Launcher [Rare B]' data-icon='dfl'></label>
        </div>
        <div class="lance">
            <label for='hora_spear' id='hora_spear-label' class='hora_spear weapon' title='Hora Spear' data-value='1484-2280' data-name='Hora Spear' data-icon='hora_spear'></label>

            <label for='hora_spear_b' id='hora_spear_b-label' class='hora_spear weapon' title='Intense Hora Spear' data-value='1960-2980' data-name='Intense Hora Spear' data-icon='hora_spear'></label>

            <label for='black_lance' id='black_lance-label' class='black_lance weapon' title='Black Lance' data-value='1960-2980' data-name='Black Lance' data-icon='black_lance'></label>

            <label for='black_lance_b' id='black_lance_b-label' class='black_lance weapon' title='Intense Black Lance' data-value='2434-3680' data-name='Intense Black Lance' data-icon='black_lance'></label>

            <label for='divine_lance' id='divine_lance-label' class='black_lance weapon' title='Divine Lance' data-value='2587-3874' data-name='Divine Lance' data-icon='black_lance'></label>

            <label for='divine_lance_b' id='divine_lance_b-label' class='black_lance weapon' title='Divine Lance [Rare B]' data-value='3019-4563' data-name='Divine Lance [Rare B]' data-icon='black_lance'></label>

            <label for='saint_lance' id='saint_lance-label' class='black_lance weapon' title='Saint Lance' data-value='3415-5036' data-name='Saint Lance' data-icon='black_lance'></label>

            <label for='saint_lance_b' id='saint_lance_b-label' class='black_lance weapon' title='Saint Lance [Rare B]' data-value='3743-5657' data-name='Saint Lance [Rare B]' data-icon='black_lance'></label>
        </div>
    </div>

    <div id="armor_container" title="Armor List">
        <label for='head_c' id='head_c-label'  class='head_c armor' title='Kepala Tipe C' data-name='Kepala Tipe C' data-icon="head_c" data-value='2'></label>
        <label for='core_c' id='core_c-label'  class='core_c armor' title='Baju Tipe C' data-name='Baju Tipe C' data-icon="core_c" data-value='2'></label>
        <label for='hand_c' id='hand_c-label'  class='hand_c armor' title='Tangan Tipe C' data-name='Tangan Tipe C' data-icon="hand_c" data-value='2'></label>
        <label for='leg_c' id='leg_c-label'  class='leg_c armor' title='Celana Tipe C' data-name='Celana Tipe C' data-icon="leg_c" data-value='2'></label>
        <label for='shoes_c' id='shoes_c-label'  class='shoes_c armor' title='Kaki Tipe C' data-name='Kaki Tipe C' data-icon="shoes_c" data-value='2'></label>
    </div>

    <div id="weapon_input_container" class="container"></div>
    <div id="armor_input_container" class="container"></div>
{% endblock %}

{% block bottom_container %}
    <div class="buff_container">
        <input type='checkbox' class='buff_input hidden_input' id='wild_rage' name='buff[wild_rage]' value='30'/>
        <label for='wild_rage'  class='wild_rage buff' title='Wild Rage'></label>

        <input type='checkbox' class='buff_input hidden_input' id='magnetic_arm' name='buff[magnetic_arm]' value='30'/>
        <label for='magnetic_arm'  class='magnetic_arm buff' title='Magnetic Arm'></label>

        <input type='checkbox' class='buff_input hidden_input' id='siege_mastery' name='buff[siege_mastery]' value='50'/>
        <label for='siege_mastery'  class='siege_mastery buff' title='Siege Mastery'></label>

        <input type='checkbox' class='buff_input hidden_input' id='od20' name='buff[od20]' value='20'/>
        <label for='od20'  class='od20 buff' title='Advanced Over Drive Charger'></label>

        <input type='checkbox' class='buff_input hidden_input' id='od40' name='buff[od40]' value='40'/>
        <label for='od40'  class='od40 buff' title='Offense Charger'></label>

        <input type='checkbox' class='buff_input hidden_input' id='od55' name='buff[od55]' value='55'/>
        <label for='od55'  class='od55 buff' title='Offense Charger [Premium]'></label>

        <input type='checkbox' class='buff_input hidden_input' id='od70' name='buff[od70]' value='70'/>
        <label for='od70'  class='od70 buff' title='Roast Sweet Potato'></label>
    </div>
    <div class="siege_container">
        <input type='checkbox' class='buff_input hidden_input' id='white_siege' name='buff[white_siege]' value='35'/>
        <label for='white_siege'  class='white_siege buff' title='Advanced Siege Kit'></label>

        <input type='checkbox' class='buff_input hidden_input' id='red_siege_1' name='buff[red_siege_1]' value='40'/>
        <label for='red_siege_1'  class='red_siege buff' title='Attack Ephocal Siege Kit'></label>

        <input type='checkbox' class='buff_input hidden_input' id='red_siege_2' name='buff[red_siege_2]' value='10'/>
        <label for='red_siege_2'  class='red_siege buff' title='Defense Ephocal Siege Kit'></label>

        <input type='checkbox' class='buff_input hidden_input' id='blue_siege' name='buff[blue_siege]' value='60'/>
        <label for='blue_siege'  class='blue_siege buff' title='Sniper Lecas Siege Kit'></label>

        <input type='checkbox' class='buff_input hidden_input' id='black_siege_1' name='buff[black_siege_1]' value='45'/>
        <label for='black_siege_1'  class='black_siege buff' title='Shining Siege Kit'></label>

        <input type='checkbox' class='buff_input hidden_input' id='black_siege_2' name='buff[black_siege_2]' value='40'/>
        <label for='black_siege_2'  class='black_siege buff' title='Advanced Shining Siege Kit'></label>
    </div>
    <div class="charm_container">
        <input type='checkbox' class='buff_input hidden_input' id='burst_gen_1' name='buff[burst_gen_1]' value='4'/>
        <label for='burst_gen_1'  class='burst_gen buff' title='Burst Generator'></label>

        <input type='checkbox' class='buff_input hidden_input' id='burst_gen_2' name='buff[burst_gen_2]' value='4'/>
        <label for='burst_gen_2'  class='burst_gen buff' title='Burst Generator'></label>

        <input type='checkbox' class='buff_input hidden_input' id='burst_gen_3' name='buff[burst_gen_3]' value='4'/>
        <label for='burst_gen_3'  class='burst_gen buff' title='Burst Generator'></label>

        <input type='checkbox' class='buff_input hidden_input' id='burst_gen_4' name='buff[burst_gen_4]' value='4'/>
        <label for='burst_gen_4'  class='burst_gen buff' title='Burst Generator'></label>

        <input type='checkbox' class='buff_input hidden_input' id='burst_gen_5' name='buff[burst_gen_5]' value='4'/>
        <label for='burst_gen_5'  class='burst_gen buff' title='Burst Generator'></label>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type='text/javascript'>
        $(function() {
            var createInputElements = function(input, elemType, inputType) {
                var trunc = input.id.replace('-label', '');
                var $newElem = $('<input/>', {
                    type: inputType,
                    "class": elemType + '_input hidden_input',
                    id: trunc,
                    name: inputType == 'checkbox' ? 'buff[' + trunc + ']' : elemType,
                    value: $(input).data('value')
                });
                $newElem.data('icon', $(input).data('icon')).data('name', $(input).data('name'));
                $newElem.appendTo('#' + elemType + '_input_container');
            }

            var createButtonElement = function(elemType, listName) {
                var $newElem = $('<button/>', {
                    type: 'button',
                    id: 'show_' + elemType,
                    html: listName
                });
                $newElem.appendTo('#' + elemType + '_input_container');
            }

            var resetElement = function(id) {
                var elem = $('#' + id);
                elem.removeClass().addClass('none');
                elem.removeAttr('title');
                elem.removeData('value');
            }

            /** initialize amulet input and button */
            $('#amu_container').find('.amu').each(function(k, v) {
                createInputElements(v, 'amu', 'checkbox');
            });
            createButtonElement('amu', 'Amulet List');

            /** initialize ring input and button */
            $('#ring_container').find('.ring').each(function(k, v) {
                createInputElements(v, 'ring', 'checkbox');
            });
            createButtonElement('ring', 'Ring List');

            /** initialize weapon input and button */
            $('#weapon_container').find('.weapon').each(function(k, v) {
                createInputElements(v, 'weapon', 'radio');
            });
            createButtonElement('weapon', 'Weapon List');

            /** initialize armor input and button */
            $('#armor_container').find('.armor').each(function(k, v) {
                createInputElements(v, 'armor', 'checkbox');
            });
            createButtonElement('armor', 'Armor List');

            /** ajax */
            var trigger = function() {
                $.ajax({
                    type: 'get',
                    url: '/calculate',
                    data: $('form').serialize(),
                    success: function(json) {
                        $('#result_atk_min').text(json.totalMin);
                        $('#result_atk_max').text(json.totalMax);
                        $('#result_buff').text(json.buff);
                    }
                });
            };

            /** reset all fields */
            var resetInfo = function() {
                $('#result_name').text('-');
                $('#result_buff').text('0');

                $('.ring_input').filter(':checked').prop('checked', false).trigger('change');
                $('.amu_input').filter(':checked').prop('checked', false).trigger('change');
                $('.weapon_input').filter(':checked').prop('checked', false).trigger('change');
                $('.armor_input').filter(':checked').prop('checked', false).trigger('change');
                $('.upgrade_input').filter(':checked').prop('checked', false);
                $('.buff_input').filter(':checked').prop('checked', false).trigger('change');

                resetElement('result_image');
                resetElement('amu_l');
                resetElement('amu_r');
                resetElement('ring_l');
                resetElement('ring_r');
            }

            $('.reset').on('click', function() {
                resetInfo();
                trigger();
            });

            /** elemental */
            var elementalLogic = function(arr, input) {
                for(var i = 0; i < arr.length; i++) {
                    if(arr[i] && arr[i] == input) {
                        arr[i] = undefined;
                        $('#' + input.id.replace('-label', '')).prop('checked', false).trigger('change');
                        return;
                    }
                    else if(!arr[i]) {
                        arr[i] = input;
                        $('#' + input.id.replace('-label', '')).prop('checked', true).trigger('change');
                        return;
                    }
                }
                $('#' + arr[0].id.replace('-label', '')).prop('checked', false).trigger('change');
                arr[0] = input;
                $('#' + arr[0].id.replace('-label', '')).prop('checked', true).trigger('change');
            };

            /** amulet */
            var amuletArray = new Array(2);
            $('.amu').on('click', function() {
                elementalLogic(amuletArray, this);
            })
            $('.amu_input').on('change', function() {
                var id = '#' + this.id + '-label';
                $(id).toggleClass('highlight');
                trigger();
                $.each(amuletArray, function(k, v) {
                    if(v) {
                        if(k == 0) {
                            $('#amu_l').removeClass().addClass('amu ' + $(v).data('icon'));
                            $('#amu_l').attr('title', $(v).data('name'));
                            $('#amu_l').data('value', $(v).data('value'));
                        }
                        else if(k == 1) {
                            $('#amu_r').removeClass().addClass('amu ' + $(v).data('icon'));
                            $('#amu_r').attr('title', $(v).data('name'));
                            $('#amu_r').data('value', $(v).data('value'));
                        }
                    }
                    else {
                        if(k == 0) {
                            resetElement('amu_l');
                        }
                        else if(k == 1) {
                            resetElement('amu_r');
                        }
                    }
                });
            });

            /** ring */
            var ringArray = new Array(2);
            $('.ring').on('click', function() {
                elementalLogic(ringArray, this);
            })
            $('.ring_input').on('change', function() {
                $('#' + this.id + '-label').toggleClass('highlight');
                trigger();
                $.each(ringArray, function(k, v) {
                    if(v) {
                        if(k == 0) {
                            $('#ring_l').removeClass().addClass('ring ' + $(v).data('icon'));
                            $('#ring_l').attr('title', $(v).data('name'));
                            $('#ring_l').data('value', $(v).data('value'));
                        }
                        else if(k == 1) {
                            $('#ring_r').removeClass().addClass('ring ' + $(v).data('icon'));
                            $('#ring_r').attr('title', $(v).data('name'));
                            $('#ring_r').data('value', $(v).data('value'));
                        }
                    }
                    else {
                        if(k == 0) {
                            resetElement('ring_l');
                        }
                        else if(k == 1) {
                            resetElement('ring_r');
                        }
                    }
                });
            });

            var toggleRadio = function(cssClass) {
                $('.' + cssClass).each(function(k, v) {
                    if($(v).is(':checked')) {
                        $('#' + v.id + '-label').addClass('highlight');
                    }
                    else {
                        $('#' + v.id + '-label').removeClass('highlight');
                    }
                });
            }
            /** weapon */
            $('.weapon_input').on('change', function() {
                $('#result_name').text($(this).data('name'));
                $('#result_image').removeClass().addClass('weapon ' + $(this).data('icon'));
                $('#result_image').attr('title', $(this).data('name'));
                $('#result_image').data('value', $(this).val());
                trigger();
                toggleRadio('weapon_input');
            });

            var armorLogic = function(arr, input) {
                for(var i = 0; i < arr.length; i++) {
                    if(arr[i] && arr[i] == input) {
                        arr[i] = undefined;
                        $('#' + input.id.replace('-label', '')).prop('checked', false).trigger('change');
                        return;
                    }
                    else if(!arr[i]) {
                        arr[i] = input;
                        $('#' + input.id.replace('-label', '')).prop('checked', true).trigger('change');
                        return;
                    }
                }
                $('#' + arr[0].id.replace('-label', '')).prop('checked', false).trigger('change');
                arr[0] = input;
                $('#' + arr[0].id.replace('-label', '')).prop('checked', true).trigger('change');
            }
            var armorArray = new Array(5);
            $('.armor').on('click', function() {
                armorLogic(armorArray, this);
            })
            $('.armor_input').on('change', function() {
                $('#' + this.id + '-label').toggleClass('highlight');
                trigger();
                $.each(ringArray, function(k, v) {
                    if(v) {
                        if(k == 0) {
                            $('#ring_l').removeClass().addClass('ring ' + $(v).data('icon'));
                            $('#ring_l').attr('title', $(v).data('name'));
                            $('#ring_l').data('value', $(v).data('value'));
                        }
                        else if(k == 1) {
                            $('#ring_r').removeClass().addClass('ring ' + $(v).data('icon'));
                            $('#ring_r').attr('title', $(v).data('name'));
                            $('#ring_r').data('value', $(v).data('value'));
                        }
                    }
                    else {
                        if(k == 0) {
                            resetElement('ring_l');
                        }
                        else if(k == 1) {
                            resetElement('ring_r');
                        }
                    }
                });
            });

            $('.upgrade_input').on('change', function() {
                trigger();
            });
            $('.buff_input').on('change', function() {
                trigger();
                $(this).next().toggleClass('highlight');
            });

            /** dialog box */
            $( "#amu_container, #ring_container, #weapon_container, #armor_container").dialog({
                autoOpen: false,
                height: 300,
                width: 450,
                modal: true
            });
            $( "#show_amu" ).button().on('click', function() {
                $( "#amu_container" ).dialog( "open" );
            });
            $( "#show_ring" ).button().on('click', function() {
                $( "#ring_container" ).dialog( "open" );
            });
            $( "#show_weapon" ).button().on('click', function() {
                $( "#weapon_container" ).dialog( "open" );
            });
            $( "#show_armor" ).button().on('click', function() {
                $( "#armor_container" ).dialog( "open" );
            });

            $( document ).tooltip({
                content: function() {
                    var result = '<div>' + $(this).attr('title') + '</div>';
                    if ($(this).hasClass('buff')) {
                        result += '<div>Damage: ' + $(this).prev().val() + '%</div>';
                    }
                    else if ($(this).hasClass('amu') || $(this).hasClass('ring')) {
                        result += '<div>Damage: ' + $(this).data('value') + '%</div>';
                    }
                    else if ($(this).hasClass('weapon')) {
                        result += '<div>Damage: ' + $(this).data('value') + '</div>';
                    }
                    return result;
                }
            });
        });
    </script>
{% endblock %}